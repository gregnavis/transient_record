name: Test
on: [push, pull_request]

jobs:
  # Run the linter first for rapid feedback if some trivial stylistic issues
  # slipped through the cracks.
  lint:
    runs-on: ubuntu-latest
    env:
      # When running in CI the gemspec does NOT pull rubocop as a dependency
      # to avoid conflicting with various Ruby/Rails setups. We need to
      # set LINT to explicitly request rubocop as a dependency.
      LINT: true
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4
          bundler-cache: true
      - run: bundle exec rake rubocop

  test:
    needs: lint
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: transient_record_primary
          POSTGRES_USER: github
          POSTGRES_PASSWORD: github
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: github
          MYSQL_USER: github
          MYSQL_PASSWORD: github
          MYSQL_DATABASE: transient_record_primary
        options: >-
          --health-cmd "mysqladmin ping -h 127.0.0.1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
    strategy:
      matrix:
        ruby: ["3.1", "3.2", "3.3", "3.4"]
        active_record: ["7.0", "7.1", "7.2", "8.0"]
        exclude:
          - ruby: "3.1"
            active_record: "8.0"
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/gemfiles/Gemfile.activerecord-${{ matrix.active_record }}.x
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Prepare PostgreSQL
        run: createdb transient_record_secondary
        env:
          PGHOST: localhost
          PGPORT: 5432
          PGUSER: github
          PGPASSWORD: github
          PGDATABASE: postgres
      - name: Run the test suite against PostgreSQL
        run: bundle exec rake test:postgresql
        env:
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_USERNAME: github
          DATABASE_PASSWORD: github
      - name: Prepare MySQL
        run: |
          mysqladmin -h127.0.0.1 -uroot -pgithub create transient_record_secondary
          mysql -h127.0.0.1 -uroot -pgithub -e "GRANT ALL PRIVILEGES ON transient_record_secondary.* TO 'github'"
      - name: Run the test suite against MySQL
        run: bundle exec rake test:mysql2
        env:
          # We can't use localhost because that makes the MySQL client try
          # connecting via a Unix socket instead of TCP.
          DATABASE_HOST: 127.0.0.1
          DATABASE_PORT: 3306
          DATABASE_USERNAME: github
          DATABASE_PASSWORD: github
      - name: Run the test suite against SQLite3
        run: bundle exec rake test:sqlite3
